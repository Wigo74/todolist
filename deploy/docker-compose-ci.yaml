version: '3.8'


services:
  db:
    image: postgres:15.1-alpine
    restart: always
    env_file: config_compose
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./pgdb_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      timeout: 3s
      interval: 4s
      retries: 10

  api:
    container_name: api
    image: wigor74/skypro_todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    env_file: config_compose
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - django_static:/todolist/static

  migrations:
      image: wigor74/skypro_todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
      env_file: config_compose
      environment:
        DB_HOST: "db"
        DB_ENGINE: ${DB_ENGIN}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_NAME}
        SECRET_KEY: ${SECRET_KEY}
      depends_on:
        db:
          condition: service_healthy
      command: >
          sh -c "python3 manage.py migrate"

  frontend:
    image: sermalenk/skypro-front:lesson-34
    platform: linux/amd64
    restart: always
    depends_on:
      api:
        condition: service_started
    ports:
      - "80:80"

volumes:
  pgdb_data:
  django_static:



