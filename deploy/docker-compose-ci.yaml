version: '3.9'


services:
  db:
    image: postgres:15.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always

    container_name: db

    volumes:
      - db_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 3s
      timeout: 4s
      retries: 10

  api:
    container_name: api
    image: wigor74/skypro_todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
#    env_file: config_compose
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      DB_ENGINE: ${DB_ENGINE}
      DEBUG: 0
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${SOCIAL_AUTH_VK_OAUTH2_KEY}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${SOCIAL_AUTH_VK_OAUTH2_SECRET}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app


  frontend:
    image: sermalenk/skypro-front:lesson-36
    container_name: frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started


volumes:
  db_data:




